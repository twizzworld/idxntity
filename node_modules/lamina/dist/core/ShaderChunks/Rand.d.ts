declare const _default: "\n\n/**\n * Normalized a value from the range [-1, 1] to the range [0,1].\n *\n * @name sc_normalize\n * @function\n * @param {float} v Value to normalize\n * @return {float} Normalized Value\n *\n * @example\n * float n = sc_normalize(-0.2);\n * // n = 0.4\n */\nfloat sc_normalize(float v) { return sc_map(v, -1.0, 1.0, 0.0, 1.0); }\n\n/**\n * Generates a random 2D Vector.\n *\n * @name sc_rand2\n * @function\n * @param {vec2} p Vector to hash to generate the random numbers from.\n * @return {vec2} Random vector.\n *\n * @example\n * vec2 n = sc_rand2(vec2(1.0, -4.2));\n */\nvec2 sc_rand2(vec2 p) {\n  return fract(\n      sin(vec2(dot(p, vec2(127.1, 311.7)), dot(p, vec2(269.5, 183.3)))) *\n      43758.5453);\n}\n\n/**\n * Generates a random 3D Vector.\n *\n * @name sc_rand3\n * @function\n * @param {vec3} p Vector to hash to generate the random numbers from.\n * @return {vec3} Random vector.\n *\n * @example\n * vec3 n = sc_rand3(vec3(1.0, -4.2, 0.2));\n */\nvec3 sc_rand3(vec3 p) { return mod(((p * 34.0) + 1.0) * p, 289.0); }\n\n/**\n * Generates a random 4D Vector.\n *\n * @name sc_rand4\n * @function\n * @param {vec4} p Vector to hash to generate the random numbers from.\n * @return {vec4} Random vector.\n *\n * @example\n * vec4 n = sc_rand4(vec4(1.0, -4.2, 0.2, 2.2));\n */\nvec4 sc_rand4(vec4 p) { return mod(((p * 34.0) + 1.0) * p, 289.0); }\n\n/**\n * Generates a random number.\n *\n * @name sc_rand\n * @function\n * @param {float} n Value to hash to generate the number from.\n * @return {float} Random number.\n *\n * @example\n * float n = sc_rand(2.5);\n */\nfloat sc_rand(float n) { return fract(sin(n) * 1e4); }\n\n/**\n * Generates a random number.\n *\n * @name sc_rand\n * @function\n * @param {vec2} p Value to hash to generate the number from.\n * @return {float} Random number.\n *\n * @example\n * float n = sc_rand(vec2(2.5, -1.8));\n */\nfloat sc_rand(vec2 p) {\n  return fract(1e4 * sin(17.0 * p.x + p.y * 0.1) *\n               (0.1 + abs(sin(p.y * 13.0 + p.x))));\n}\n";
export default _default;
