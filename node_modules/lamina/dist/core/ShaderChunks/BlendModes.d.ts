declare const _default: "\n// SC: Blend modes definitions **********\n\nfloat sc_softLight(float f, float b) {\n  return (f < 0.5)\n             ? b - (1.0 - 2.0 * f) * b * (1.0 - b)\n             : (b < 0.25)\n                   ? b + (2.0 * f - 1.0) * b * ((16.0 * b - 12.0) * b + 3.0)\n                   : b + (2.0 * f - 1.0) * (sqrt(b) - b);\n}\n\nvec4 sc_softLight(vec4 b, vec4 f) {\n  vec4 result;\n  result.x = sc_softLight(f.x, b.x);\n  result.y = sc_softLight(f.y, b.y);\n  result.z = sc_softLight(f.z, b.z);\n  result.a = sc_softLight(f.a, b.a);\n  \n  return result;\n}\n\nvec4 sc_screen(vec4 f, vec4 b) {\n  vec4 result;\n\n  result = 1.0 - (1.0 - f) * (1.0 - b);\n  result = mix(f, result, b.a);\n\n  return result;\n}\n\nfloat sc_overlay(float f, float b) {\n  return (b < 0.5) ? 2.0 * f * b : 1.0 - 2.0 * (1.0 - f) * (1.0 - b);\n}\n\nvec4 sc_overlay(vec4 b, vec4 f) {\n  vec4 result;\n  result.x = sc_overlay(f.x, b.x);\n  result.y = sc_overlay(f.y, b.y);\n  result.z = sc_overlay(f.z, b.z);\n  result.a = sc_overlay(f.a, b.a);\n\n\n  return result;\n}\n\nvec4 sc_divide(vec4 f, vec4 b) {\n  vec4 result = vec4(0.0);\n  result = b / f;\n  return result;\n}\n\nvec4 sc_switch(vec4 f, vec4 b, float o) {\n  vec4 result = vec4(0.0);\n  result = max((f * o), (b * (1.0 - o)));\n  return result;\n}\n\nvec4 sc_darken(vec4 f, vec4 b) {\n  vec4 result = vec4(0.0);\n  result = mix(f, min(f, b), b.a);\n  return result;\n}\n\nvec4 sc_lighten(vec4 f, vec4 b) {\n  vec4 result = vec4(0.0);\n  result = mix(f, max(f, b), b.a);\n  return result;\n}\n\nfloat sc_addSub(float f, float b) {\n  return f > 0.5 ? f + b : b - f;\n}\nvec4 sc_addSub(vec4 f, vec4 b) {\n  vec4 result = vec4(0.0);\n\n  result.r = sc_addSub(f.r, b.r * b.a);\n  result.g = sc_addSub(f.g, b.g * b.a);\n  result.b = sc_addSub(f.b, b.b* b.a ) ;\n  result.a = sc_addSub(f.a, b.a);\n\n  return result;\n}\n\nvec4 sc_multiply(vec4 f, vec4 b) {\n  vec4 result = vec4(0.0);\n\n  result = mix(f, b * f, b.a);\n  result.a = f.a + b.a * (1.0 - f.a);\n\n  return result;\n}\n\nvec4 sc_subtract(vec4 f, vec4 b) {\n  vec4 result = vec4(0.0);\n\n  result = f - b * b.a;\n  result.a = f.a + b.a * (1.0 - f.a);\n\n  return result;\n}\n\nvec4 sc_add(vec4 f, vec4 b) {\n  vec4 result = vec4(0.0);\n\n  result = f + b * (b.a);\n  result.a = f.a + b.a * (1.0 - f.a);\n\n  return result;\n}\n\nvec4 sc_copy(vec4 b, vec4 f) {\n  vec4 result = vec4(0.0);\n\n  result.a = f.a + b.a * (1.0 - f.a);\n  result.rgb = ((f.rgb * f.a) + (b.rgb * b.a) * (1.0 - f.a));\n\n  return result;\n}\n\n";
export default _default;
