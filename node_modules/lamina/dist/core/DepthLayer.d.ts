import { DepthLayerProps, LayerBlendMode } from '../types';
import { ColorRepresentation, IUniform } from 'three';
import AbstractLayer from './AbstractLayer';
export default class DepthLayer extends AbstractLayer {
    name: string;
    protected uuid: string;
    uniforms: {
        [key: string]: IUniform<any>;
    };
    constructor(props?: DepthLayerProps);
    getVertexVariables(): string;
    getVertexBody(e: string): string;
    getFragmentVariables(): string;
    getFragmentBody(e: string): string;
    set alpha(v: number);
    get alpha(): number;
    set mode(v: LayerBlendMode);
    get mode(): LayerBlendMode;
    set near(v: number);
    get near(): number;
    set far(v: number);
    get far(): number;
    set origin(v: number[]);
    get origin(): number[];
    set colorA(v: ColorRepresentation);
    get colorA(): ColorRepresentation;
    set colorB(v: ColorRepresentation);
    get colorB(): ColorRepresentation;
    set isVector(v: boolean);
    get isVector(): boolean;
}
