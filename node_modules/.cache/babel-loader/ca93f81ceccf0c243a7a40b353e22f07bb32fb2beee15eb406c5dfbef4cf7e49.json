{"ast":null,"code":"import _slicedToArray from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nvar PointMaterialImpl = /*#__PURE__*/function (_THREE$ShaderMaterial) {\n  _inherits(PointMaterialImpl, _THREE$ShaderMaterial);\n  var _super = _createSuper(PointMaterialImpl);\n  function PointMaterialImpl() {\n    _classCallCheck(this, PointMaterialImpl);\n    return _super.call(this, {\n      transparent: true,\n      uniforms: {\n        size: {\n          value: 1\n        }\n      },\n      vertexShader: THREE.ShaderLib.points.vertexShader,\n      fragmentShader: \"\\n      varying vec3 vColor;\\n      void main() {\\n        vec2 cxy = 2.0 * gl_PointCoord - 1.0;\\n        float r = dot(cxy, cxy);\\n        float delta = fwidth(r);\\n        vec3 color = vColor;\\n        #ifdef TONE_MAPPING\\n          color = toneMapping(color);\\n        #endif\\n        gl_FragColor = linearToOutputTexel(vec4(color, 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r)));\\n      }\",\n      vertexColors: true\n    });\n  }\n  _createClass(PointMaterialImpl, [{\n    key: \"scale\",\n    get: function get() {\n      return this.uniforms.size.value;\n    },\n    set: function set(v) {\n      this.uniforms.size.value = v;\n    }\n  }]);\n  return PointMaterialImpl;\n}(THREE.ShaderMaterial);\nvar PointMaterial = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _React$useState = React.useState(function () {\n      return new PointMaterialImpl();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    material = _React$useState2[0];\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\nexport { PointMaterial, PointMaterialImpl };","map":{"version":3,"names":["_extends","THREE","React","PointMaterialImpl","_THREE$ShaderMaterial","_inherits","_super","_createSuper","_classCallCheck","call","transparent","uniforms","size","value","vertexShader","ShaderLib","points","fragmentShader","vertexColors","_createClass","key","get","set","v","ShaderMaterial","PointMaterial","forwardRef","props","ref","_React$useState","useState","_React$useState2","_slicedToArray","material","createElement","object","attach"],"sources":["/Users/rizzytwizzy/Projects/idxntity/node_modules/@react-three/drei/core/PointMaterial.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nclass PointMaterialImpl extends THREE.ShaderMaterial {\n  constructor() {\n    super({\n      transparent: true,\n      uniforms: {\n        size: {\n          value: 1\n        }\n      },\n      vertexShader: THREE.ShaderLib.points.vertexShader,\n      fragmentShader: `\n      varying vec3 vColor;\n      void main() {\n        vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n        float r = dot(cxy, cxy);\n        float delta = fwidth(r);\n        vec3 color = vColor;\n        #ifdef TONE_MAPPING\n          color = toneMapping(color);\n        #endif\n        gl_FragColor = linearToOutputTexel(vec4(color, 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r)));\n      }`,\n      vertexColors: true\n    });\n  }\n\n  get scale() {\n    return this.uniforms.size.value;\n  }\n\n  set scale(v) {\n    this.uniforms.size.value = v;\n  }\n\n}\nconst PointMaterial = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const [material] = React.useState(() => new PointMaterialImpl());\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { PointMaterial, PointMaterialImpl };\n"],"mappings":";;;;;AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,IAEzBC,iBAAiB,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,iBAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,iBAAA;EACrB,SAAAA,kBAAA,EAAc;IAAAK,eAAA,OAAAL,iBAAA;IAAA,OAAAG,MAAA,CAAAG,IAAA,OACN;MACJC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE;QACRC,IAAI,EAAE;UACJC,KAAK,EAAE;QACT;MACF,CAAC;MACDC,YAAY,EAAEb,KAAK,CAACc,SAAS,CAACC,MAAM,CAACF,YAAY;MACjDG,cAAc,4YAWZ;MACFC,YAAY,EAAE;IAChB,CAAC;EACH;EAACC,YAAA,CAAAhB,iBAAA;IAAAiB,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAY;MACV,OAAO,IAAI,CAACV,QAAQ,CAACC,IAAI,CAACC,KAAK;IACjC,CAAC;IAAAS,GAAA,EAED,SAAAA,IAAUC,CAAC,EAAE;MACX,IAAI,CAACZ,QAAQ,CAACC,IAAI,CAACC,KAAK,GAAGU,CAAC;IAC9B;EAAC;EAAA,OAAApB,iBAAA;AAAA,EAhC6BF,KAAK,CAACuB,cAAc;AAmCpD,IAAMC,aAAa,GAAG,aAAavB,KAAK,CAACwB,UAAU,CAAC,UAACC,KAAK,EAAEC,GAAG,EAAK;EAClE,IAAAC,eAAA,GAAmB3B,KAAK,CAAC4B,QAAQ,CAAC;MAAA,OAAM,IAAI3B,iBAAiB,CAAC,CAAC;IAAA,EAAC;IAAA4B,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAzDI,QAAQ,GAAAF,gBAAA;EACf,OAAO,aAAa7B,KAAK,CAACgC,aAAa,CAAC,WAAW,EAAElC,QAAQ,CAAC;IAC5DmC,MAAM,EAAEF,QAAQ;IAChBL,GAAG,EAAEA,GAAG;IACRQ,MAAM,EAAE;EACV,CAAC,EAAET,KAAK,CAAC,CAAC;AACZ,CAAC,CAAC;AAEF,SAASF,aAAa,EAAEtB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}