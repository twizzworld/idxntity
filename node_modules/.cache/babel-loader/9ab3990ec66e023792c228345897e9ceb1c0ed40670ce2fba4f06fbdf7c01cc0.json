{"ast":null,"code":"import _objectSpread from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createClass from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport * as THREE from 'three';\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  return /*#__PURE__*/function (_THREE$ShaderMaterial) {\n    _inherits(_class, _THREE$ShaderMaterial);\n    var _super = _createSuper(_class);\n    function _class() {\n      var _this;\n      _classCallCheck(this, _class);\n      var entries = Object.entries(uniforms); // Create unforms and shaders\n\n      _this = _super.call(this, {\n        uniforms: entries.reduce(function (acc, _ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n            name = _ref2[0],\n            value = _ref2[1];\n          var uniform = THREE.UniformsUtils.clone(_defineProperty({}, name, {\n            value: value\n          }));\n          return _objectSpread(_objectSpread({}, acc), uniform);\n        }, {}),\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader\n      }); // Create getter/setters\n\n      entries.forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n          name = _ref4[0];\n        return Object.defineProperty(_assertThisInitialized(_this), name, {\n          get: function get() {\n            return _this.uniforms[name].value;\n          },\n          set: function set(v) {\n            return _this.uniforms[name].value = v;\n          }\n        });\n      });\n      if (onInit) onInit(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(_class);\n  }(THREE.ShaderMaterial);\n}\nexport { shaderMaterial };","map":{"version":3,"names":["THREE","shaderMaterial","uniforms","vertexShader","fragmentShader","onInit","_THREE$ShaderMaterial","_inherits","_class","_super","_createSuper","_this","_classCallCheck","entries","Object","call","reduce","acc","_ref","_ref2","_slicedToArray","name","value","uniform","UniformsUtils","clone","_defineProperty","_objectSpread","forEach","_ref3","_ref4","defineProperty","_assertThisInitialized","get","set","v","_createClass","ShaderMaterial"],"sources":["/Users/rizzytwizzy/Projects/idxntity/node_modules/@react-three/drei/core/shaderMaterial.js"],"sourcesContent":["import * as THREE from 'three';\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  return class extends THREE.ShaderMaterial {\n    constructor() {\n      const entries = Object.entries(uniforms); // Create unforms and shaders\n\n      super({\n        uniforms: entries.reduce((acc, [name, value]) => {\n          const uniform = THREE.UniformsUtils.clone({\n            [name]: {\n              value\n            }\n          });\n          return { ...acc,\n            ...uniform\n          };\n        }, {}),\n        vertexShader,\n        fragmentShader\n      }); // Create getter/setters\n\n      entries.forEach(([name]) => Object.defineProperty(this, name, {\n        get: () => this.uniforms[name].value,\n        set: v => this.uniforms[name].value = v\n      }));\n      if (onInit) onInit(this);\n    }\n\n  };\n}\n\nexport { shaderMaterial };\n"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,cAAcA,CAACC,QAAQ,EAAEC,YAAY,EAAEC,cAAc,EAAEC,MAAM,EAAE;EACtE,8BAAAC,qBAAA;IAAAC,SAAA,CAAAC,MAAA,EAAAF,qBAAA;IAAA,IAAAG,MAAA,GAAAC,YAAA,CAAAF,MAAA;IACE,SAAAA,OAAA,EAAc;MAAA,IAAAG,KAAA;MAAAC,eAAA,OAAAJ,MAAA;MACZ,IAAMK,OAAO,GAAGC,MAAM,CAACD,OAAO,CAACX,QAAQ,CAAC,CAAC,CAAC;;MAE1CS,KAAA,GAAAF,MAAA,CAAAM,IAAA,OAAM;QACJb,QAAQ,EAAEW,OAAO,CAACG,MAAM,CAAC,UAACC,GAAG,EAAAC,IAAA,EAAoB;UAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,IAAA;YAAjBG,IAAI,GAAAF,KAAA;YAAEG,KAAK,GAAAH,KAAA;UACzC,IAAMI,OAAO,GAAGvB,KAAK,CAACwB,aAAa,CAACC,KAAK,CAAAC,eAAA,KACtCL,IAAI,EAAG;YACNC,KAAK,EAALA;UACF,CAAC,CACF,CAAC;UACF,OAAAK,aAAA,CAAAA,aAAA,KAAYV,GAAG,GACVM,OAAO;QAEd,CAAC,EAAE,CAAC,CAAC,CAAC;QACNpB,YAAY,EAAZA,YAAY;QACZC,cAAc,EAAdA;MACF,CAAC,EAAE,CAAC;;MAEJS,OAAO,CAACe,OAAO,CAAC,UAAAC,KAAA;QAAA,IAAAC,KAAA,GAAAV,cAAA,CAAAS,KAAA;UAAER,IAAI,GAAAS,KAAA;QAAA,OAAMhB,MAAM,CAACiB,cAAc,CAAAC,sBAAA,CAAArB,KAAA,GAAOU,IAAI,EAAE;UAC5DY,GAAG,EAAE,SAAAA,IAAA;YAAA,OAAMtB,KAAA,CAAKT,QAAQ,CAACmB,IAAI,CAAC,CAACC,KAAK;UAAA;UACpCY,GAAG,EAAE,SAAAA,IAAAC,CAAC;YAAA,OAAIxB,KAAA,CAAKT,QAAQ,CAACmB,IAAI,CAAC,CAACC,KAAK,GAAGa,CAAC;UAAA;QACzC,CAAC,CAAC;MAAA,EAAC;MACH,IAAI9B,MAAM,EAAEA,MAAM,CAAA2B,sBAAA,CAAArB,KAAA,CAAK,CAAC;MAAC,OAAAA,KAAA;IAC3B;IAAC,OAAAyB,YAAA,CAAA5B,MAAA;EAAA,EAxBkBR,KAAK,CAACqC,cAAc;AA2B3C;AAEA,SAASpC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}