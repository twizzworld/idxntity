{"ast":null,"code":"import _slicedToArray from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nvar isOrthographic = function isOrthographic(def) {\n  return def && def.isOrthographicCamera;\n};\nvar isObject3D = function isObject3D(def) {\n  return def && def.isObject3D;\n};\nvar isBox3 = function isBox3(def) {\n  return def && def.isBox3;\n};\nvar context = /*#__PURE__*/React.createContext(null);\nfunction Bounds(_ref) {\n  var children = _ref.children,\n    _ref$damping = _ref.damping,\n    damping = _ref$damping === void 0 ? 6 : _ref$damping,\n    fit = _ref.fit,\n    clip = _ref.clip,\n    _ref$margin = _ref.margin,\n    margin = _ref$margin === void 0 ? 1.2 : _ref$margin,\n    _ref$eps = _ref.eps,\n    eps = _ref$eps === void 0 ? 0.01 : _ref$eps,\n    onFit = _ref.onFit;\n  var ref = React.useRef(null);\n  var camera = useThree(function (state) {\n    return state.camera;\n  }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  var controls = useThree(function (state) {\n    return state.controls;\n  });\n  var invalidate = useThree(function (state) {\n    return state.invalidate;\n  });\n  var onFitRef = React.useRef(onFit);\n  onFitRef.current = onFit;\n  function equals(a, b) {\n    return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n  }\n  function damp(v, t, lambda, delta) {\n    v.x = THREE.MathUtils.damp(v.x, t.x, lambda, delta);\n    v.y = THREE.MathUtils.damp(v.y, t.y, lambda, delta);\n    v.z = THREE.MathUtils.damp(v.z, t.z, lambda, delta);\n  }\n  var _React$useState = React.useState(function () {\n      return {\n        animating: false,\n        focus: new THREE.Vector3(),\n        camera: new THREE.Vector3(),\n        zoom: 1\n      };\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    current = _React$useState2[0];\n  var _React$useState3 = React.useState(function () {\n      return {\n        focus: new THREE.Vector3(),\n        camera: new THREE.Vector3(),\n        zoom: 1\n      };\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    goal = _React$useState4[0];\n  var _React$useState5 = React.useState(function () {\n      return new THREE.Box3();\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 1),\n    box = _React$useState6[0];\n  var api = React.useMemo(function () {\n    function getSize() {\n      var size = box.getSize(new THREE.Vector3());\n      var center = box.getCenter(new THREE.Vector3());\n      var maxSize = Math.max(size.x, size.y, size.z);\n      var fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n      var fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n      var distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n      return {\n        box: box,\n        size: size,\n        center: center,\n        distance: distance\n      };\n    }\n    return {\n      getSize: getSize,\n      refresh: function refresh(object) {\n        if (isObject3D(object)) box.setFromObject(object);else if (isBox3(object)) box.copy(object);else if (ref.current) box.setFromObject(ref.current);\n        if (box.isEmpty()) {\n          var max = camera.position.length() || 10;\n          box.setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(max, max, max));\n        }\n        if ((controls == null ? void 0 : controls.constructor.name) === 'OrthographicTrackballControls') {\n          // Put camera on a sphere along which it should moves\n          var _getSize = getSize(),\n            distance = _getSize.distance;\n          var direction = camera.position.clone().sub(controls.target).normalize().multiplyScalar(distance);\n          var newPos = controls.target.clone().add(direction);\n          camera.position.copy(newPos);\n        }\n        return this;\n      },\n      clip: function clip() {\n        var _getSize2 = getSize(),\n          distance = _getSize2.distance;\n        if (controls) controls.maxDistance = distance * 10;\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n        if (controls) controls.update();\n        return this;\n      },\n      fit: function fit() {\n        current.camera.copy(camera.position);\n        if (controls) current.focus.copy(controls.target);\n        var _getSize3 = getSize(),\n          center = _getSize3.center,\n          distance = _getSize3.distance;\n        var direction = center.clone().sub(camera.position).normalize().multiplyScalar(distance);\n        goal.camera.copy(center).sub(direction);\n        goal.focus.copy(center);\n        if (isOrthographic(camera)) {\n          current.zoom = camera.zoom;\n          var maxHeight = 0,\n            maxWidth = 0;\n          var vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)]; // Transform the center and each corner to camera space\n\n          center.applyMatrix4(camera.matrixWorldInverse);\n          for (var _i = 0, _vertices = vertices; _i < _vertices.length; _i++) {\n            var v = _vertices[_i];\n            v.applyMatrix4(camera.matrixWorldInverse);\n            maxHeight = Math.max(maxHeight, Math.abs(v.y - center.y));\n            maxWidth = Math.max(maxWidth, Math.abs(v.x - center.x));\n          }\n          maxHeight *= 2;\n          maxWidth *= 2;\n          var zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n          var zoomForWidth = (camera.right - camera.left) / maxWidth;\n          goal.zoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n          if (!damping) {\n            camera.zoom = goal.zoom;\n            camera.updateProjectionMatrix();\n          }\n        }\n        if (damping) {\n          current.animating = true;\n        } else {\n          camera.position.copy(goal.camera);\n          camera.lookAt(goal.focus);\n          if (controls) {\n            controls.target.copy(goal.focus);\n            controls.update();\n          }\n          invalidate();\n        }\n        if (onFitRef.current) onFitRef.current(this.getSize());\n        return this;\n      }\n    };\n  }, [box, camera, controls, margin, damping, invalidate]);\n  React.useLayoutEffect(function () {\n    api.refresh();\n    if (fit) api.fit();\n    if (clip) api.clip();\n    if (controls) {\n      // Try to prevent drag hijacking\n      var callback = function callback() {\n        return current.animating = false;\n      };\n      controls.addEventListener('start', callback);\n      return function () {\n        return controls.removeEventListener('start', callback);\n      };\n    }\n  }, [clip, fit, controls]);\n  useFrame(function (state, delta) {\n    if (current.animating) {\n      damp(current.focus, goal.focus, damping, delta);\n      damp(current.camera, goal.camera, damping, delta);\n      current.zoom = THREE.MathUtils.damp(current.zoom, goal.zoom, damping, delta);\n      camera.position.copy(current.camera);\n      if (isOrthographic(camera)) {\n        camera.zoom = current.zoom;\n        camera.updateProjectionMatrix();\n      }\n      if (!controls) {\n        camera.lookAt(current.focus);\n      } else {\n        controls.target.copy(current.focus);\n        controls.update();\n      }\n      invalidate();\n      if (isOrthographic(camera) && !(Math.abs(current.zoom - goal.zoom) < eps)) return;\n      if (!isOrthographic(camera) && !equals(current.camera, goal.camera)) return;\n      if (controls && !equals(current.focus, goal.focus)) return;\n      current.animating = false;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\nfunction useBounds() {\n  return React.useContext(context);\n}\nexport { Bounds, useBounds };","map":{"version":3,"names":["React","THREE","useThree","useFrame","isOrthographic","def","isOrthographicCamera","isObject3D","isBox3","context","createContext","Bounds","_ref","children","_ref$damping","damping","fit","clip","_ref$margin","margin","_ref$eps","eps","onFit","ref","useRef","camera","state","controls","invalidate","onFitRef","current","equals","a","b","Math","abs","x","y","z","damp","v","t","lambda","delta","MathUtils","_React$useState","useState","animating","focus","Vector3","zoom","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","goal","_React$useState5","Box3","_React$useState6","box","api","useMemo","getSize","size","center","getCenter","maxSize","max","fitHeightDistance","atan","PI","fov","fitWidthDistance","aspect","distance","refresh","object","setFromObject","copy","isEmpty","position","length","setFromCenterAndSize","constructor","name","_getSize","direction","clone","sub","target","normalize","multiplyScalar","newPos","add","_getSize2","maxDistance","near","far","updateProjectionMatrix","update","_getSize3","maxHeight","maxWidth","vertices","min","applyMatrix4","matrixWorldInverse","_i","_vertices","zoomForHeight","top","bottom","zoomForWidth","right","left","lookAt","useLayoutEffect","callback","addEventListener","removeEventListener","createElement","Provider","value","useBounds","useContext"],"sources":["/Users/rizzytwizzy/Projects/idxntity/node_modules/@react-three/drei/core/Bounds.js"],"sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst isOrthographic = def => def && def.isOrthographicCamera;\n\nconst isObject3D = def => def && def.isObject3D;\n\nconst isBox3 = def => def && def.isBox3;\n\nconst context = /*#__PURE__*/React.createContext(null);\nfunction Bounds({\n  children,\n  damping = 6,\n  fit,\n  clip,\n  margin = 1.2,\n  eps = 0.01,\n  onFit\n}) {\n  const ref = React.useRef(null);\n  const camera = useThree(state => state.camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const controls = useThree(state => state.controls);\n  const invalidate = useThree(state => state.invalidate);\n  const onFitRef = React.useRef(onFit);\n  onFitRef.current = onFit;\n\n  function equals(a, b) {\n    return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n  }\n\n  function damp(v, t, lambda, delta) {\n    v.x = THREE.MathUtils.damp(v.x, t.x, lambda, delta);\n    v.y = THREE.MathUtils.damp(v.y, t.y, lambda, delta);\n    v.z = THREE.MathUtils.damp(v.z, t.z, lambda, delta);\n  }\n\n  const [current] = React.useState(() => ({\n    animating: false,\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [goal] = React.useState(() => ({\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [box] = React.useState(() => new THREE.Box3());\n  const api = React.useMemo(() => {\n    function getSize() {\n      const size = box.getSize(new THREE.Vector3());\n      const center = box.getCenter(new THREE.Vector3());\n      const maxSize = Math.max(size.x, size.y, size.z);\n      const fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n      const fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n      const distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n      return {\n        box,\n        size,\n        center,\n        distance\n      };\n    }\n\n    return {\n      getSize,\n\n      refresh(object) {\n        if (isObject3D(object)) box.setFromObject(object);else if (isBox3(object)) box.copy(object);else if (ref.current) box.setFromObject(ref.current);\n\n        if (box.isEmpty()) {\n          const max = camera.position.length() || 10;\n          box.setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(max, max, max));\n        }\n\n        if ((controls == null ? void 0 : controls.constructor.name) === 'OrthographicTrackballControls') {\n          // Put camera on a sphere along which it should moves\n          const {\n            distance\n          } = getSize();\n          const direction = camera.position.clone().sub(controls.target).normalize().multiplyScalar(distance);\n          const newPos = controls.target.clone().add(direction);\n          camera.position.copy(newPos);\n        }\n\n        return this;\n      },\n\n      clip() {\n        const {\n          distance\n        } = getSize();\n        if (controls) controls.maxDistance = distance * 10;\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n        if (controls) controls.update();\n        return this;\n      },\n\n      fit() {\n        current.camera.copy(camera.position);\n        if (controls) current.focus.copy(controls.target);\n        const {\n          center,\n          distance\n        } = getSize();\n        const direction = center.clone().sub(camera.position).normalize().multiplyScalar(distance);\n        goal.camera.copy(center).sub(direction);\n        goal.focus.copy(center);\n\n        if (isOrthographic(camera)) {\n          current.zoom = camera.zoom;\n          let maxHeight = 0,\n              maxWidth = 0;\n          const vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)]; // Transform the center and each corner to camera space\n\n          center.applyMatrix4(camera.matrixWorldInverse);\n\n          for (const v of vertices) {\n            v.applyMatrix4(camera.matrixWorldInverse);\n            maxHeight = Math.max(maxHeight, Math.abs(v.y - center.y));\n            maxWidth = Math.max(maxWidth, Math.abs(v.x - center.x));\n          }\n\n          maxHeight *= 2;\n          maxWidth *= 2;\n          const zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n          const zoomForWidth = (camera.right - camera.left) / maxWidth;\n          goal.zoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n\n          if (!damping) {\n            camera.zoom = goal.zoom;\n            camera.updateProjectionMatrix();\n          }\n        }\n\n        if (damping) {\n          current.animating = true;\n        } else {\n          camera.position.copy(goal.camera);\n          camera.lookAt(goal.focus);\n\n          if (controls) {\n            controls.target.copy(goal.focus);\n            controls.update();\n          }\n\n          invalidate();\n        }\n\n        if (onFitRef.current) onFitRef.current(this.getSize());\n        return this;\n      }\n\n    };\n  }, [box, camera, controls, margin, damping, invalidate]);\n  React.useLayoutEffect(() => {\n    api.refresh();\n    if (fit) api.fit();\n    if (clip) api.clip();\n\n    if (controls) {\n      // Try to prevent drag hijacking\n      const callback = () => current.animating = false;\n\n      controls.addEventListener('start', callback);\n      return () => controls.removeEventListener('start', callback);\n    }\n  }, [clip, fit, controls]);\n  useFrame((state, delta) => {\n    if (current.animating) {\n      damp(current.focus, goal.focus, damping, delta);\n      damp(current.camera, goal.camera, damping, delta);\n      current.zoom = THREE.MathUtils.damp(current.zoom, goal.zoom, damping, delta);\n      camera.position.copy(current.camera);\n\n      if (isOrthographic(camera)) {\n        camera.zoom = current.zoom;\n        camera.updateProjectionMatrix();\n      }\n\n      if (!controls) {\n        camera.lookAt(current.focus);\n      } else {\n        controls.target.copy(current.focus);\n        controls.update();\n      }\n\n      invalidate();\n      if (isOrthographic(camera) && !(Math.abs(current.zoom - goal.zoom) < eps)) return;\n      if (!isOrthographic(camera) && !equals(current.camera, goal.camera)) return;\n      if (controls && !equals(current.focus, goal.focus)) return;\n      current.animating = false;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\nfunction useBounds() {\n  return React.useContext(context);\n}\n\nexport { Bounds, useBounds };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}