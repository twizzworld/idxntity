{"ast":null,"code":"import * as React from 'react';\nimport { addEffect, addAfterEffect } from '@react-three/fiber';\nfunction useIntersect(onChange) {\n  var ref = React.useRef(null);\n  var check = React.useRef(false);\n  var temp = React.useRef(false);\n  React.useEffect(function () {\n    var obj = ref.current;\n    if (obj) {\n      // Stamp out frustum check pre-emptively\n      var unsub1 = addEffect(function () {\n        check.current = false;\n        return true;\n      }); // If the object is inside the frustum three will call onRender\n\n      var oldOnRender = obj.onBeforeRender;\n      obj.onBeforeRender = function () {\n        return check.current = true;\n      }; // Compare the check value against the temp value, if it differs set state\n\n      var unsub2 = addAfterEffect(function () {\n        if (check.current !== temp.current) onChange(temp.current = check.current);\n        return true;\n      });\n      return function () {\n        obj.onBeforeRender = oldOnRender;\n        unsub1();\n        unsub2();\n      };\n    }\n  }, []);\n  return ref;\n}\nexport { useIntersect };","map":{"version":3,"names":["React","addEffect","addAfterEffect","useIntersect","onChange","ref","useRef","check","temp","useEffect","obj","current","unsub1","oldOnRender","onBeforeRender","unsub2"],"sources":["/Users/rizzytwizzy/Projects/idxntity/node_modules/@react-three/drei/core/useIntersect.js"],"sourcesContent":["import * as React from 'react';\nimport { addEffect, addAfterEffect } from '@react-three/fiber';\n\nfunction useIntersect(onChange) {\n  const ref = React.useRef(null);\n  const check = React.useRef(false);\n  const temp = React.useRef(false);\n  React.useEffect(() => {\n    const obj = ref.current;\n\n    if (obj) {\n      // Stamp out frustum check pre-emptively\n      const unsub1 = addEffect(() => {\n        check.current = false;\n        return true;\n      }); // If the object is inside the frustum three will call onRender\n\n      const oldOnRender = obj.onBeforeRender;\n\n      obj.onBeforeRender = () => check.current = true; // Compare the check value against the temp value, if it differs set state\n\n\n      const unsub2 = addAfterEffect(() => {\n        if (check.current !== temp.current) onChange(temp.current = check.current);\n        return true;\n      });\n      return () => {\n        obj.onBeforeRender = oldOnRender;\n        unsub1();\n        unsub2();\n      };\n    }\n  }, []);\n  return ref;\n}\n\nexport { useIntersect };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,EAAEC,cAAc,QAAQ,oBAAoB;AAE9D,SAASC,YAAYA,CAACC,QAAQ,EAAE;EAC9B,IAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC,IAAI,CAAC;EAC9B,IAAMC,KAAK,GAAGP,KAAK,CAACM,MAAM,CAAC,KAAK,CAAC;EACjC,IAAME,IAAI,GAAGR,KAAK,CAACM,MAAM,CAAC,KAAK,CAAC;EAChCN,KAAK,CAACS,SAAS,CAAC,YAAM;IACpB,IAAMC,GAAG,GAAGL,GAAG,CAACM,OAAO;IAEvB,IAAID,GAAG,EAAE;MACP;MACA,IAAME,MAAM,GAAGX,SAAS,CAAC,YAAM;QAC7BM,KAAK,CAACI,OAAO,GAAG,KAAK;QACrB,OAAO,IAAI;MACb,CAAC,CAAC,CAAC,CAAC;;MAEJ,IAAME,WAAW,GAAGH,GAAG,CAACI,cAAc;MAEtCJ,GAAG,CAACI,cAAc,GAAG;QAAA,OAAMP,KAAK,CAACI,OAAO,GAAG,IAAI;MAAA,EAAC,CAAC;;MAGjD,IAAMI,MAAM,GAAGb,cAAc,CAAC,YAAM;QAClC,IAAIK,KAAK,CAACI,OAAO,KAAKH,IAAI,CAACG,OAAO,EAAEP,QAAQ,CAACI,IAAI,CAACG,OAAO,GAAGJ,KAAK,CAACI,OAAO,CAAC;QAC1E,OAAO,IAAI;MACb,CAAC,CAAC;MACF,OAAO,YAAM;QACXD,GAAG,CAACI,cAAc,GAAGD,WAAW;QAChCD,MAAM,CAAC,CAAC;QACRG,MAAM,CAAC,CAAC;MACV,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC;EACN,OAAOV,GAAG;AACZ;AAEA,SAASF,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}