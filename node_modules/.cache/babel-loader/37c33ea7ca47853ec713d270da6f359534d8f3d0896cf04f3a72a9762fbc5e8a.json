{"ast":null,"code":"import _classCallCheck from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { UniformsUtils, ShaderMaterial, NoBlending, WebGLRenderTarget } from \"three\";\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { CopyShader } from \"../shaders/CopyShader.js\";\nvar SavePass = /*#__PURE__*/function (_Pass) {\n  _inherits(SavePass, _Pass);\n  var _super = _createSuper(SavePass);\n  function SavePass(renderTarget) {\n    var _this;\n    _classCallCheck(this, SavePass);\n    _this = _super.call(this);\n    if (CopyShader === void 0) console.error(\"THREE.SavePass relies on CopyShader\");\n    var shader = CopyShader;\n    _this.textureID = \"tDiffuse\";\n    _this.uniforms = UniformsUtils.clone(shader.uniforms);\n    _this.material = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n      blending: NoBlending\n    });\n    _this.renderTarget = renderTarget;\n    if (_this.renderTarget === void 0) {\n      _this.renderTarget = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      _this.renderTarget.texture.name = \"SavePass.rt\";\n    }\n    _this.needsSwap = false;\n    _this.fsQuad = new FullScreenQuad(_this.material);\n    return _this;\n  }\n  _createClass(SavePass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      if (this.uniforms[this.textureID]) {\n        this.uniforms[this.textureID].value = readBuffer.texture;\n      }\n      renderer.setRenderTarget(this.renderTarget);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }]);\n  return SavePass;\n}(Pass);\nexport { SavePass };","map":{"version":3,"names":["UniformsUtils","ShaderMaterial","NoBlending","WebGLRenderTarget","Pass","FullScreenQuad","CopyShader","SavePass","_Pass","_inherits","_super","_createSuper","renderTarget","_this","_classCallCheck","call","console","error","shader","textureID","uniforms","clone","material","vertexShader","fragmentShader","blending","window","innerWidth","innerHeight","texture","name","needsSwap","fsQuad","_createClass","key","value","render","renderer","writeBuffer","readBuffer","setRenderTarget","clear"],"sources":["/Users/rizzytwizzy/Projects/idxntity/node_modules/three-stdlib/postprocessing/SavePass.js"],"sourcesContent":["import { UniformsUtils, ShaderMaterial, NoBlending, WebGLRenderTarget } from \"three\";\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { CopyShader } from \"../shaders/CopyShader.js\";\nclass SavePass extends Pass {\n  constructor(renderTarget) {\n    super();\n    if (CopyShader === void 0)\n      console.error(\"THREE.SavePass relies on CopyShader\");\n    const shader = CopyShader;\n    this.textureID = \"tDiffuse\";\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n      blending: NoBlending\n    });\n    this.renderTarget = renderTarget;\n    if (this.renderTarget === void 0) {\n      this.renderTarget = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      this.renderTarget.texture.name = \"SavePass.rt\";\n    }\n    this.needsSwap = false;\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    if (this.uniforms[this.textureID]) {\n      this.uniforms[this.textureID].value = readBuffer.texture;\n    }\n    renderer.setRenderTarget(this.renderTarget);\n    if (this.clear)\n      renderer.clear();\n    this.fsQuad.render(renderer);\n  }\n}\nexport {\n  SavePass\n};\n"],"mappings":";;;;AAAA,SAASA,aAAa,EAAEC,cAAc,EAAEC,UAAU,EAAEC,iBAAiB,QAAQ,OAAO;AACpF,SAASC,IAAI,EAAEC,cAAc,QAAQ,WAAW;AAChD,SAASC,UAAU,QAAQ,0BAA0B;AAAC,IAChDC,QAAQ,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,QAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,QAAA;EACZ,SAAAA,SAAYK,YAAY,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,QAAA;IACxBM,KAAA,GAAAH,MAAA,CAAAK,IAAA;IACA,IAAIT,UAAU,KAAK,KAAK,CAAC,EACvBU,OAAO,CAACC,KAAK,CAAC,qCAAqC,CAAC;IACtD,IAAMC,MAAM,GAAGZ,UAAU;IACzBO,KAAA,CAAKM,SAAS,GAAG,UAAU;IAC3BN,KAAA,CAAKO,QAAQ,GAAGpB,aAAa,CAACqB,KAAK,CAACH,MAAM,CAACE,QAAQ,CAAC;IACpDP,KAAA,CAAKS,QAAQ,GAAG,IAAIrB,cAAc,CAAC;MACjCmB,QAAQ,EAAEP,KAAA,CAAKO,QAAQ;MACvBG,YAAY,EAAEL,MAAM,CAACK,YAAY;MACjCC,cAAc,EAAEN,MAAM,CAACM,cAAc;MACrCC,QAAQ,EAAEvB;IACZ,CAAC,CAAC;IACFW,KAAA,CAAKD,YAAY,GAAGA,YAAY;IAChC,IAAIC,KAAA,CAAKD,YAAY,KAAK,KAAK,CAAC,EAAE;MAChCC,KAAA,CAAKD,YAAY,GAAG,IAAIT,iBAAiB,CAACuB,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;MAChFf,KAAA,CAAKD,YAAY,CAACiB,OAAO,CAACC,IAAI,GAAG,aAAa;IAChD;IACAjB,KAAA,CAAKkB,SAAS,GAAG,KAAK;IACtBlB,KAAA,CAAKmB,MAAM,GAAG,IAAI3B,cAAc,CAACQ,KAAA,CAAKS,QAAQ,CAAC;IAAC,OAAAT,KAAA;EAClD;EAACoB,YAAA,CAAA1B,QAAA;IAAA2B,GAAA;IAAAC,KAAA,EACD,SAAAC,OAAOC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAE;MACxC,IAAI,IAAI,CAACnB,QAAQ,CAAC,IAAI,CAACD,SAAS,CAAC,EAAE;QACjC,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACD,SAAS,CAAC,CAACgB,KAAK,GAAGI,UAAU,CAACV,OAAO;MAC1D;MACAQ,QAAQ,CAACG,eAAe,CAAC,IAAI,CAAC5B,YAAY,CAAC;MAC3C,IAAI,IAAI,CAAC6B,KAAK,EACZJ,QAAQ,CAACI,KAAK,CAAC,CAAC;MAClB,IAAI,CAACT,MAAM,CAACI,MAAM,CAACC,QAAQ,CAAC;IAC9B;EAAC;EAAA,OAAA9B,QAAA;AAAA,EA9BoBH,IAAI;AAgC3B,SACEG,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}