{"ast":null,"code":"import _slicedToArray from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { SimplexNoise } from 'three-stdlib';\nvar CameraShake = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$intensity = _ref.intensity,\n    intensity = _ref$intensity === void 0 ? 1 : _ref$intensity,\n    decay = _ref.decay,\n    _ref$decayRate = _ref.decayRate,\n    decayRate = _ref$decayRate === void 0 ? 0.65 : _ref$decayRate,\n    _ref$maxYaw = _ref.maxYaw,\n    maxYaw = _ref$maxYaw === void 0 ? 0.1 : _ref$maxYaw,\n    _ref$maxPitch = _ref.maxPitch,\n    maxPitch = _ref$maxPitch === void 0 ? 0.1 : _ref$maxPitch,\n    _ref$maxRoll = _ref.maxRoll,\n    maxRoll = _ref$maxRoll === void 0 ? 0.1 : _ref$maxRoll,\n    _ref$yawFrequency = _ref.yawFrequency,\n    yawFrequency = _ref$yawFrequency === void 0 ? 0.1 : _ref$yawFrequency,\n    _ref$pitchFrequency = _ref.pitchFrequency,\n    pitchFrequency = _ref$pitchFrequency === void 0 ? 0.1 : _ref$pitchFrequency,\n    _ref$rollFrequency = _ref.rollFrequency,\n    rollFrequency = _ref$rollFrequency === void 0 ? 0.1 : _ref$rollFrequency,\n    controls = _ref.controls;\n  var camera = useThree(function (state) {\n    return state.camera;\n  }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  var defaultControls = useThree(function (state) {\n    return state.controls;\n  });\n  var intensityRef = React.useRef(intensity);\n  var initialRotation = React.useRef(camera.rotation.clone());\n  var _React$useState = React.useState(function () {\n      return new SimplexNoise();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    yawNoise = _React$useState2[0];\n  var _React$useState3 = React.useState(function () {\n      return new SimplexNoise();\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    pitchNoise = _React$useState4[0];\n  var _React$useState5 = React.useState(function () {\n      return new SimplexNoise();\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 1),\n    rollNoise = _React$useState6[0];\n  var constrainIntensity = function constrainIntensity() {\n    if (intensityRef.current < 0 || intensityRef.current > 1) {\n      intensityRef.current = intensityRef.current < 0 ? 0 : 1;\n    }\n  };\n  React.useImperativeHandle(ref, function () {\n    return {\n      getIntensity: function getIntensity() {\n        return intensityRef.current;\n      },\n      setIntensity: function setIntensity(val) {\n        intensityRef.current = val;\n        constrainIntensity();\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    var currControls = defaultControls || (controls == null ? void 0 : controls.current);\n    var callback = function callback() {\n      return void (initialRotation.current = camera.rotation.clone());\n    };\n    currControls == null ? void 0 : currControls.addEventListener('change', callback);\n    return function () {\n      return void (currControls == null ? void 0 : currControls.removeEventListener('change', callback));\n    };\n  }, [controls, defaultControls]);\n  useFrame(function (_ref2, delta) {\n    var clock = _ref2.clock;\n    var shake = Math.pow(intensityRef.current, 2);\n    var yaw = maxYaw * shake * yawNoise.noise(clock.elapsedTime * yawFrequency, 1);\n    var pitch = maxPitch * shake * pitchNoise.noise(clock.elapsedTime * pitchFrequency, 1);\n    var roll = maxRoll * shake * rollNoise.noise(clock.elapsedTime * rollFrequency, 1);\n    camera.rotation.set(initialRotation.current.x + pitch, initialRotation.current.y + yaw, initialRotation.current.z + roll);\n    if (decay && intensityRef.current > 0) {\n      intensityRef.current -= decayRate * delta;\n      constrainIntensity();\n    }\n  });\n  return null;\n});\nexport { CameraShake };","map":{"version":3,"names":["React","useThree","useFrame","SimplexNoise","CameraShake","forwardRef","_ref","ref","_ref$intensity","intensity","decay","_ref$decayRate","decayRate","_ref$maxYaw","maxYaw","_ref$maxPitch","maxPitch","_ref$maxRoll","maxRoll","_ref$yawFrequency","yawFrequency","_ref$pitchFrequency","pitchFrequency","_ref$rollFrequency","rollFrequency","controls","camera","state","defaultControls","intensityRef","useRef","initialRotation","rotation","clone","_React$useState","useState","_React$useState2","_slicedToArray","yawNoise","_React$useState3","_React$useState4","pitchNoise","_React$useState5","_React$useState6","rollNoise","constrainIntensity","current","useImperativeHandle","getIntensity","setIntensity","val","useEffect","currControls","callback","addEventListener","removeEventListener","_ref2","delta","clock","shake","Math","pow","yaw","noise","elapsedTime","pitch","roll","set","x","y","z"],"sources":["/Users/rizzytwizzy/Projects/idxntity/node_modules/@react-three/drei/core/CameraShake.js"],"sourcesContent":["import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { SimplexNoise } from 'three-stdlib';\n\nconst CameraShake = /*#__PURE__*/React.forwardRef(({\n  intensity = 1,\n  decay,\n  decayRate = 0.65,\n  maxYaw = 0.1,\n  maxPitch = 0.1,\n  maxRoll = 0.1,\n  yawFrequency = 0.1,\n  pitchFrequency = 0.1,\n  rollFrequency = 0.1,\n  controls\n}, ref) => {\n  const camera = useThree(state => state.camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(state => state.controls);\n  const intensityRef = React.useRef(intensity);\n  const initialRotation = React.useRef(camera.rotation.clone());\n  const [yawNoise] = React.useState(() => new SimplexNoise());\n  const [pitchNoise] = React.useState(() => new SimplexNoise());\n  const [rollNoise] = React.useState(() => new SimplexNoise());\n\n  const constrainIntensity = () => {\n    if (intensityRef.current < 0 || intensityRef.current > 1) {\n      intensityRef.current = intensityRef.current < 0 ? 0 : 1;\n    }\n  };\n\n  React.useImperativeHandle(ref, () => ({\n    getIntensity: () => intensityRef.current,\n    setIntensity: val => {\n      intensityRef.current = val;\n      constrainIntensity();\n    }\n  }), []);\n  React.useEffect(() => {\n    const currControls = defaultControls || (controls == null ? void 0 : controls.current);\n\n    const callback = () => void (initialRotation.current = camera.rotation.clone());\n\n    currControls == null ? void 0 : currControls.addEventListener('change', callback);\n    return () => void (currControls == null ? void 0 : currControls.removeEventListener('change', callback));\n  }, [controls, defaultControls]);\n  useFrame(({\n    clock\n  }, delta) => {\n    const shake = Math.pow(intensityRef.current, 2);\n    const yaw = maxYaw * shake * yawNoise.noise(clock.elapsedTime * yawFrequency, 1);\n    const pitch = maxPitch * shake * pitchNoise.noise(clock.elapsedTime * pitchFrequency, 1);\n    const roll = maxRoll * shake * rollNoise.noise(clock.elapsedTime * rollFrequency, 1);\n    camera.rotation.set(initialRotation.current.x + pitch, initialRotation.current.y + yaw, initialRotation.current.z + roll);\n\n    if (decay && intensityRef.current > 0) {\n      intensityRef.current -= decayRate * delta;\n      constrainIntensity();\n    }\n  });\n  return null;\n});\n\nexport { CameraShake };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}