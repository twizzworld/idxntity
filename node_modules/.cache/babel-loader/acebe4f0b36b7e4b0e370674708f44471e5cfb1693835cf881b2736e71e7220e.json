{"ast":null,"code":"import _slicedToArray from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { Object3D, AnimationMixer } from 'three';\nimport { useFrame } from '@react-three/fiber';\nfunction useAnimations(clips, root) {\n  var ref = React.useRef();\n  var _React$useState = React.useState(function () {\n      return root ? root instanceof Object3D ? {\n        current: root\n      } : root : ref;\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    actualRef = _React$useState2[0]; // eslint-disable-next-line prettier/prettier\n\n  var _React$useState3 = React.useState(function () {\n      return new AnimationMixer(undefined);\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    mixer = _React$useState4[0];\n  var lazyActions = React.useRef({});\n  var _React$useState5 = React.useState(function () {\n      var actions = {};\n      clips.forEach(function (clip) {\n        return Object.defineProperty(actions, clip.name, {\n          enumerable: true,\n          get: function get() {\n            if (actualRef.current) {\n              return lazyActions.current[clip.name] || (lazyActions.current[clip.name] = mixer.clipAction(clip, actualRef.current));\n            }\n          }\n        });\n      });\n      return {\n        ref: actualRef,\n        clips: clips,\n        actions: actions,\n        names: clips.map(function (c) {\n          return c.name;\n        }),\n        mixer: mixer\n      };\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 1),\n    api = _React$useState6[0];\n  useFrame(function (state, delta) {\n    return mixer.update(delta);\n  });\n  React.useEffect(function () {\n    var currentRoot = actualRef.current;\n    return function () {\n      // Clean up only when clips change, wipe out lazy actions and uncache clips\n      lazyActions.current = {};\n      Object.values(api.actions).forEach(function (action) {\n        if (currentRoot) {\n          mixer.uncacheAction(action, currentRoot);\n        }\n      });\n    };\n  }, [clips]);\n  return api;\n}\nexport { useAnimations };","map":{"version":3,"names":["React","Object3D","AnimationMixer","useFrame","useAnimations","clips","root","ref","useRef","_React$useState","useState","current","_React$useState2","_slicedToArray","actualRef","_React$useState3","undefined","_React$useState4","mixer","lazyActions","_React$useState5","actions","forEach","clip","Object","defineProperty","name","enumerable","get","clipAction","names","map","c","_React$useState6","api","state","delta","update","useEffect","currentRoot","values","action","uncacheAction"],"sources":["/Users/rizzytwizzy/Projects/idxntity/node_modules/@react-three/drei/core/useAnimations.js"],"sourcesContent":["import * as React from 'react';\nimport { Object3D, AnimationMixer } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nfunction useAnimations(clips, root) {\n  const ref = React.useRef();\n  const [actualRef] = React.useState(() => root ? root instanceof Object3D ? {\n    current: root\n  } : root : ref); // eslint-disable-next-line prettier/prettier\n\n  const [mixer] = React.useState(() => new AnimationMixer(undefined));\n  const lazyActions = React.useRef({});\n  const [api] = React.useState(() => {\n    const actions = {};\n    clips.forEach(clip => Object.defineProperty(actions, clip.name, {\n      enumerable: true,\n\n      get() {\n        if (actualRef.current) {\n          return lazyActions.current[clip.name] || (lazyActions.current[clip.name] = mixer.clipAction(clip, actualRef.current));\n        }\n      }\n\n    }));\n    return {\n      ref: actualRef,\n      clips,\n      actions,\n      names: clips.map(c => c.name),\n      mixer\n    };\n  });\n  useFrame((state, delta) => mixer.update(delta));\n  React.useEffect(() => {\n    const currentRoot = actualRef.current;\n    return () => {\n      // Clean up only when clips change, wipe out lazy actions and uncache clips\n      lazyActions.current = {};\n      Object.values(api.actions).forEach(action => {\n        if (currentRoot) {\n          mixer.uncacheAction(action, currentRoot);\n        }\n      });\n    };\n  }, [clips]);\n  return api;\n}\n\nexport { useAnimations };\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,cAAc,QAAQ,OAAO;AAChD,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,SAASC,aAAaA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAClC,IAAMC,GAAG,GAAGP,KAAK,CAACQ,MAAM,CAAC,CAAC;EAC1B,IAAAC,eAAA,GAAoBT,KAAK,CAACU,QAAQ,CAAC;MAAA,OAAMJ,IAAI,GAAGA,IAAI,YAAYL,QAAQ,GAAG;QACzEU,OAAO,EAAEL;MACX,CAAC,GAAGA,IAAI,GAAGC,GAAG;IAAA,EAAC;IAAAK,gBAAA,GAAAC,cAAA,CAAAJ,eAAA;IAFRK,SAAS,GAAAF,gBAAA,IAEA,CAAC;;EAEjB,IAAAG,gBAAA,GAAgBf,KAAK,CAACU,QAAQ,CAAC;MAAA,OAAM,IAAIR,cAAc,CAACc,SAAS,CAAC;IAAA,EAAC;IAAAC,gBAAA,GAAAJ,cAAA,CAAAE,gBAAA;IAA5DG,KAAK,GAAAD,gBAAA;EACZ,IAAME,WAAW,GAAGnB,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,CAAC;EACpC,IAAAY,gBAAA,GAAcpB,KAAK,CAACU,QAAQ,CAAC,YAAM;MACjC,IAAMW,OAAO,GAAG,CAAC,CAAC;MAClBhB,KAAK,CAACiB,OAAO,CAAC,UAAAC,IAAI;QAAA,OAAIC,MAAM,CAACC,cAAc,CAACJ,OAAO,EAAEE,IAAI,CAACG,IAAI,EAAE;UAC9DC,UAAU,EAAE,IAAI;UAEhBC,GAAG,WAAAA,IAAA,EAAG;YACJ,IAAId,SAAS,CAACH,OAAO,EAAE;cACrB,OAAOQ,WAAW,CAACR,OAAO,CAACY,IAAI,CAACG,IAAI,CAAC,KAAKP,WAAW,CAACR,OAAO,CAACY,IAAI,CAACG,IAAI,CAAC,GAAGR,KAAK,CAACW,UAAU,CAACN,IAAI,EAAET,SAAS,CAACH,OAAO,CAAC,CAAC;YACvH;UACF;QAEF,CAAC,CAAC;MAAA,EAAC;MACH,OAAO;QACLJ,GAAG,EAAEO,SAAS;QACdT,KAAK,EAALA,KAAK;QACLgB,OAAO,EAAPA,OAAO;QACPS,KAAK,EAAEzB,KAAK,CAAC0B,GAAG,CAAC,UAAAC,CAAC;UAAA,OAAIA,CAAC,CAACN,IAAI;QAAA,EAAC;QAC7BR,KAAK,EAALA;MACF,CAAC;IACH,CAAC,CAAC;IAAAe,gBAAA,GAAApB,cAAA,CAAAO,gBAAA;IAnBKc,GAAG,GAAAD,gBAAA;EAoBV9B,QAAQ,CAAC,UAACgC,KAAK,EAAEC,KAAK;IAAA,OAAKlB,KAAK,CAACmB,MAAM,CAACD,KAAK,CAAC;EAAA,EAAC;EAC/CpC,KAAK,CAACsC,SAAS,CAAC,YAAM;IACpB,IAAMC,WAAW,GAAGzB,SAAS,CAACH,OAAO;IACrC,OAAO,YAAM;MACX;MACAQ,WAAW,CAACR,OAAO,GAAG,CAAC,CAAC;MACxBa,MAAM,CAACgB,MAAM,CAACN,GAAG,CAACb,OAAO,CAAC,CAACC,OAAO,CAAC,UAAAmB,MAAM,EAAI;QAC3C,IAAIF,WAAW,EAAE;UACfrB,KAAK,CAACwB,aAAa,CAACD,MAAM,EAAEF,WAAW,CAAC;QAC1C;MACF,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,CAAClC,KAAK,CAAC,CAAC;EACX,OAAO6B,GAAG;AACZ;AAEA,SAAS9B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}