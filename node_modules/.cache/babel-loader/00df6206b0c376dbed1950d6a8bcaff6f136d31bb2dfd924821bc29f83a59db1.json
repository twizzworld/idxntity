{"ast":null,"code":"import * as React from 'react';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { FloatType, EquirectangularReflectionMapping, CubeTextureLoader } from 'three';\nimport { RGBELoader } from 'three-stdlib';\nimport { presetsObj } from '../helpers/environment-assets.js';\nvar CUBEMAP_ROOT = 'https://rawcdn.githack.com/pmndrs/drei-assets/aa3600359ba664d546d05821bcbca42013587df2';\nfunction Environment(_ref) {\n  var _ref$background = _ref.background,\n    background = _ref$background === void 0 ? false : _ref$background,\n    _ref$files = _ref.files,\n    files = _ref$files === void 0 ? ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'] : _ref$files,\n    _ref$path = _ref.path,\n    path = _ref$path === void 0 ? '' : _ref$path,\n    _ref$preset = _ref.preset,\n    preset = _ref$preset === void 0 ? undefined : _ref$preset,\n    scene = _ref.scene,\n    extensions = _ref.extensions;\n  if (preset) {\n    if (!(preset in presetsObj)) {\n      throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    }\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT + '/hdri/';\n  }\n  var defaultScene = useThree(function (_ref2) {\n    var scene = _ref2.scene;\n    return scene;\n  });\n  var isCubeMap = Array.isArray(files);\n  var loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  var loaderResult = useLoader(loader, isCubeMap ? [files] : files, function (loader) {\n    loader.setPath(path); // @ts-expect-error\n\n    loader.setDataType == null ? void 0 : loader.setDataType(FloatType);\n    if (extensions) extensions(loader);\n  });\n  var texture = isCubeMap ? loaderResult[0] : loaderResult;\n  texture.mapping = EquirectangularReflectionMapping;\n  React.useLayoutEffect(function () {\n    var oldbg = scene ? scene.background : defaultScene.background;\n    var oldenv = scene ? scene.environment : defaultScene.environment;\n    if (scene) {\n      scene.environment = texture;\n      if (background) scene.background = texture;\n    } else {\n      defaultScene.environment = texture;\n      if (background) defaultScene.background = texture;\n    }\n    return function () {\n      if (scene) {\n        scene.environment = oldenv;\n        scene.background = oldbg;\n      } else {\n        defaultScene.environment = oldenv;\n        defaultScene.background = oldbg;\n      } // Environment textures are volatile, better dispose and uncache them\n\n      texture.dispose();\n    };\n  }, [texture, background, scene]);\n  return null;\n}\nexport { Environment };","map":{"version":3,"names":["React","useThree","useLoader","FloatType","EquirectangularReflectionMapping","CubeTextureLoader","RGBELoader","presetsObj","CUBEMAP_ROOT","Environment","_ref","_ref$background","background","_ref$files","files","_ref$path","path","_ref$preset","preset","undefined","scene","extensions","Error","Object","keys","join","defaultScene","_ref2","isCubeMap","Array","isArray","loader","loaderResult","setPath","setDataType","texture","mapping","useLayoutEffect","oldbg","oldenv","environment","dispose"],"sources":["/Users/rizzytwizzy/Projects/idxntity/node_modules/@react-three/drei/core/Environment.js"],"sourcesContent":["import * as React from 'react';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { FloatType, EquirectangularReflectionMapping, CubeTextureLoader } from 'three';\nimport { RGBELoader } from 'three-stdlib';\nimport { presetsObj } from '../helpers/environment-assets.js';\n\nconst CUBEMAP_ROOT = 'https://rawcdn.githack.com/pmndrs/drei-assets/aa3600359ba664d546d05821bcbca42013587df2';\nfunction Environment({\n  background = false,\n  files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n  path = '',\n  preset = undefined,\n  scene,\n  extensions\n}) {\n  if (preset) {\n    if (!(preset in presetsObj)) {\n      throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    }\n\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT + '/hdri/';\n  }\n\n  const defaultScene = useThree(({\n    scene\n  }) => scene);\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  const loaderResult = useLoader(loader, isCubeMap ? [files] : files, loader => {\n    loader.setPath(path); // @ts-expect-error\n\n    loader.setDataType == null ? void 0 : loader.setDataType(FloatType);\n    if (extensions) extensions(loader);\n  });\n  const texture = isCubeMap ? loaderResult[0] : loaderResult;\n  texture.mapping = EquirectangularReflectionMapping;\n  React.useLayoutEffect(() => {\n    const oldbg = scene ? scene.background : defaultScene.background;\n    const oldenv = scene ? scene.environment : defaultScene.environment;\n\n    if (scene) {\n      scene.environment = texture;\n      if (background) scene.background = texture;\n    } else {\n      defaultScene.environment = texture;\n      if (background) defaultScene.background = texture;\n    }\n\n    return () => {\n      if (scene) {\n        scene.environment = oldenv;\n        scene.background = oldbg;\n      } else {\n        defaultScene.environment = oldenv;\n        defaultScene.background = oldbg;\n      } // Environment textures are volatile, better dispose and uncache them\n\n\n      texture.dispose();\n    };\n  }, [texture, background, scene]);\n  return null;\n}\n\nexport { Environment };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}