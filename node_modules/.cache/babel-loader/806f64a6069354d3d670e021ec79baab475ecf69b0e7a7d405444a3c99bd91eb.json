{"ast":null,"code":"import _slicedToArray from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"scale\", \"frames\", \"opacity\", \"width\", \"height\", \"blur\", \"far\", \"resolution\", \"smooth\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\nvar ContactShadows = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var scale = _ref.scale,\n    _ref$frames = _ref.frames,\n    frames = _ref$frames === void 0 ? Infinity : _ref$frames,\n    _ref$opacity = _ref.opacity,\n    opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n    _ref$width = _ref.width,\n    width = _ref$width === void 0 ? 1 : _ref$width,\n    _ref$height = _ref.height,\n    height = _ref$height === void 0 ? 1 : _ref$height,\n    _ref$blur = _ref.blur,\n    blur = _ref$blur === void 0 ? 1 : _ref$blur,\n    _ref$far = _ref.far,\n    far = _ref$far === void 0 ? 10 : _ref$far,\n    _ref$resolution = _ref.resolution,\n    resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,\n    _ref$smooth = _ref.smooth,\n    smooth = _ref$smooth === void 0 ? true : _ref$smooth,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var scene = useThree(function (_ref2) {\n    var scene = _ref2.scene;\n    return scene;\n  });\n  var gl = useThree(function (_ref3) {\n    var gl = _ref3.gl;\n    return gl;\n  });\n  var shadowCamera = React.useRef(null);\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n  var _React$useMemo = React.useMemo(function () {\n      var renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n      var renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n      renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n      var planeGeometry = new THREE.PlaneBufferGeometry(width, height).rotateX(Math.PI / 2);\n      var blurPlane = new THREE.Mesh(planeGeometry);\n      var depthMaterial = new THREE.MeshDepthMaterial();\n      depthMaterial.depthTest = depthMaterial.depthWrite = false;\n      depthMaterial.onBeforeCompile = function (shader) {\n        return shader.fragmentShader = shader.fragmentShader.replace('1.0 - fragCoordZ ), opacity );', '0.0 ), ( 1.0 - fragCoordZ ) * 1.0 );');\n      };\n      var horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n      var verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n      verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n      return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n    }, [resolution, width, height, scale]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 7),\n    renderTarget = _React$useMemo2[0],\n    planeGeometry = _React$useMemo2[1],\n    depthMaterial = _React$useMemo2[2],\n    blurPlane = _React$useMemo2[3],\n    horizontalBlurMaterial = _React$useMemo2[4],\n    verticalBlurMaterial = _React$useMemo2[5],\n    renderTargetBlur = _React$useMemo2[6];\n  var blurShadows = React.useCallback(function (blur) {\n    blurPlane.visible = true;\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTargetBlur);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTarget);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.visible = false;\n  }, []);\n  var count = 0;\n  useFrame(function () {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      var initialBackground = scene.background;\n      scene.background = null;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      scene.overrideMaterial = null;\n      blurShadows(blur);\n      if (smooth) blurShadows(blur * 0.4);\n      gl.setRenderTarget(null);\n      scene.background = initialBackground;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    map: renderTarget.texture,\n    transparent: true,\n    opacity: opacity\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\nexport { ContactShadows };","map":{"version":3,"names":["_extends","React","THREE","useThree","useFrame","HorizontalBlurShader","VerticalBlurShader","ContactShadows","forwardRef","_ref","ref","scale","_ref$frames","frames","Infinity","_ref$opacity","opacity","_ref$width","width","_ref$height","height","_ref$blur","blur","_ref$far","far","_ref$resolution","resolution","_ref$smooth","smooth","props","_objectWithoutProperties","_excluded","scene","_ref2","gl","_ref3","shadowCamera","useRef","Array","isArray","_React$useMemo","useMemo","renderTarget","WebGLRenderTarget","renderTargetBlur","texture","generateMipmaps","planeGeometry","PlaneBufferGeometry","rotateX","Math","PI","blurPlane","Mesh","depthMaterial","MeshDepthMaterial","depthTest","depthWrite","onBeforeCompile","shader","fragmentShader","replace","horizontalBlurMaterial","ShaderMaterial","verticalBlurMaterial","_React$useMemo2","_slicedToArray","blurShadows","useCallback","visible","material","uniforms","tDiffuse","value","h","setRenderTarget","render","current","v","count","initialBackground","background","overrideMaterial","createElement","geometry","rotation","map","transparent","args"],"sources":["/Users/rizzytwizzy/Projects/idxntity/node_modules/@react-three/drei/core/ContactShadows.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\n\nconst ContactShadows = /*#__PURE__*/React.forwardRef(({\n  scale,\n  frames = Infinity,\n  opacity = 1,\n  width = 1,\n  height = 1,\n  blur = 1,\n  far = 10,\n  resolution = 256,\n  smooth = true,\n  ...props\n}, ref) => {\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const shadowCamera = React.useRef(null);\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n  const [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur] = React.useMemo(() => {\n    const renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n    const renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n    const planeGeometry = new THREE.PlaneBufferGeometry(width, height).rotateX(Math.PI / 2);\n    const blurPlane = new THREE.Mesh(planeGeometry);\n    const depthMaterial = new THREE.MeshDepthMaterial();\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\n\n    depthMaterial.onBeforeCompile = shader => shader.fragmentShader = shader.fragmentShader.replace('1.0 - fragCoordZ ), opacity );', '0.0 ), ( 1.0 - fragCoordZ ) * 1.0 );');\n\n    const horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n    const verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n  }, [resolution, width, height, scale]);\n  const blurShadows = React.useCallback(blur => {\n    blurPlane.visible = true;\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTargetBlur);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTarget);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.visible = false;\n  }, []);\n  let count = 0;\n  useFrame(() => {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      const initialBackground = scene.background;\n      scene.background = null;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      scene.overrideMaterial = null;\n      blurShadows(blur);\n      if (smooth) blurShadows(blur * 0.4);\n      gl.setRenderTarget(null);\n      scene.background = initialBackground;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    map: renderTarget.texture,\n    transparent: true,\n    opacity: opacity\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\n\nexport { ContactShadows };\n"],"mappings":";;;AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,oBAAoB;AACvD,SAASC,oBAAoB,EAAEC,kBAAkB,QAAQ,cAAc;AAEvE,IAAMC,cAAc,GAAG,aAAaN,KAAK,CAACO,UAAU,CAAC,UAAAC,IAAA,EAWlDC,GAAG,EAAK;EAAA,IAVTC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAAC,WAAA,GAAAH,IAAA,CACLI,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAGE,QAAQ,GAAAF,WAAA;IAAAG,YAAA,GAAAN,IAAA,CACjBO,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,CAAC,GAAAA,YAAA;IAAAE,UAAA,GAAAR,IAAA,CACXS,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,CAAC,GAAAA,UAAA;IAAAE,WAAA,GAAAV,IAAA,CACTW,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAG,CAAC,GAAAA,WAAA;IAAAE,SAAA,GAAAZ,IAAA,CACVa,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,CAAC,GAAAA,SAAA;IAAAE,QAAA,GAAAd,IAAA,CACRe,GAAG;IAAHA,GAAG,GAAAD,QAAA,cAAG,EAAE,GAAAA,QAAA;IAAAE,eAAA,GAAAhB,IAAA,CACRiB,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,GAAG,GAAAA,eAAA;IAAAE,WAAA,GAAAlB,IAAA,CAChBmB,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAG,IAAI,GAAAA,WAAA;IACVE,KAAK,GAAAC,wBAAA,CAAArB,IAAA,EAAAsB,SAAA;EAER,IAAMC,KAAK,GAAG7B,QAAQ,CAAC,UAAA8B,KAAA;IAAA,IACrBD,KAAK,GAAAC,KAAA,CAALD,KAAK;IAAA,OACDA,KAAK;EAAA,EAAC;EACZ,IAAME,EAAE,GAAG/B,QAAQ,CAAC,UAAAgC,KAAA;IAAA,IAClBD,EAAE,GAAAC,KAAA,CAAFD,EAAE;IAAA,OACEA,EAAE;EAAA,EAAC;EACT,IAAME,YAAY,GAAGnC,KAAK,CAACoC,MAAM,CAAC,IAAI,CAAC;EACvCnB,KAAK,GAAGA,KAAK,IAAIoB,KAAK,CAACC,OAAO,CAAC5B,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,IAAI,CAAC,CAAC;EAC9DS,MAAM,GAAGA,MAAM,IAAIkB,KAAK,CAACC,OAAO,CAAC5B,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,IAAI,CAAC,CAAC;EAChE,IAAA6B,cAAA,GAAgIvC,KAAK,CAACwC,OAAO,CAAC,YAAM;MAClJ,IAAMC,YAAY,GAAG,IAAIxC,KAAK,CAACyC,iBAAiB,CAACjB,UAAU,EAAEA,UAAU,CAAC;MACxE,IAAMkB,gBAAgB,GAAG,IAAI1C,KAAK,CAACyC,iBAAiB,CAACjB,UAAU,EAAEA,UAAU,CAAC;MAC5EkB,gBAAgB,CAACC,OAAO,CAACC,eAAe,GAAGJ,YAAY,CAACG,OAAO,CAACC,eAAe,GAAG,KAAK;MACvF,IAAMC,aAAa,GAAG,IAAI7C,KAAK,CAAC8C,mBAAmB,CAAC9B,KAAK,EAAEE,MAAM,CAAC,CAAC6B,OAAO,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;MACvF,IAAMC,SAAS,GAAG,IAAIlD,KAAK,CAACmD,IAAI,CAACN,aAAa,CAAC;MAC/C,IAAMO,aAAa,GAAG,IAAIpD,KAAK,CAACqD,iBAAiB,CAAC,CAAC;MACnDD,aAAa,CAACE,SAAS,GAAGF,aAAa,CAACG,UAAU,GAAG,KAAK;MAE1DH,aAAa,CAACI,eAAe,GAAG,UAAAC,MAAM;QAAA,OAAIA,MAAM,CAACC,cAAc,GAAGD,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,gCAAgC,EAAE,sCAAsC,CAAC;MAAA;MAEzK,IAAMC,sBAAsB,GAAG,IAAI5D,KAAK,CAAC6D,cAAc,CAAC1D,oBAAoB,CAAC;MAC7E,IAAM2D,oBAAoB,GAAG,IAAI9D,KAAK,CAAC6D,cAAc,CAACzD,kBAAkB,CAAC;MACzE0D,oBAAoB,CAACR,SAAS,GAAGM,sBAAsB,CAACN,SAAS,GAAG,KAAK;MACzE,OAAO,CAACd,YAAY,EAAEK,aAAa,EAAEO,aAAa,EAAEF,SAAS,EAAEU,sBAAsB,EAAEE,oBAAoB,EAAEpB,gBAAgB,CAAC;IAChI,CAAC,EAAE,CAAClB,UAAU,EAAER,KAAK,EAAEE,MAAM,EAAET,KAAK,CAAC,CAAC;IAAAsD,eAAA,GAAAC,cAAA,CAAA1B,cAAA;IAf/BE,YAAY,GAAAuB,eAAA;IAAElB,aAAa,GAAAkB,eAAA;IAAEX,aAAa,GAAAW,eAAA;IAAEb,SAAS,GAAAa,eAAA;IAAEH,sBAAsB,GAAAG,eAAA;IAAED,oBAAoB,GAAAC,eAAA;IAAErB,gBAAgB,GAAAqB,eAAA;EAgB5H,IAAME,WAAW,GAAGlE,KAAK,CAACmE,WAAW,CAAC,UAAA9C,IAAI,EAAI;IAC5C8B,SAAS,CAACiB,OAAO,GAAG,IAAI;IACxBjB,SAAS,CAACkB,QAAQ,GAAGR,sBAAsB;IAC3CA,sBAAsB,CAACS,QAAQ,CAACC,QAAQ,CAACC,KAAK,GAAG/B,YAAY,CAACG,OAAO;IACrEiB,sBAAsB,CAACS,QAAQ,CAACG,CAAC,CAACD,KAAK,GAAGnD,IAAI,GAAG,CAAC,GAAG,GAAG;IACxDY,EAAE,CAACyC,eAAe,CAAC/B,gBAAgB,CAAC;IACpCV,EAAE,CAAC0C,MAAM,CAACxB,SAAS,EAAEhB,YAAY,CAACyC,OAAO,CAAC;IAC1CzB,SAAS,CAACkB,QAAQ,GAAGN,oBAAoB;IACzCA,oBAAoB,CAACO,QAAQ,CAACC,QAAQ,CAACC,KAAK,GAAG7B,gBAAgB,CAACC,OAAO;IACvEmB,oBAAoB,CAACO,QAAQ,CAACO,CAAC,CAACL,KAAK,GAAGnD,IAAI,GAAG,CAAC,GAAG,GAAG;IACtDY,EAAE,CAACyC,eAAe,CAACjC,YAAY,CAAC;IAChCR,EAAE,CAAC0C,MAAM,CAACxB,SAAS,EAAEhB,YAAY,CAACyC,OAAO,CAAC;IAC1CzB,SAAS,CAACiB,OAAO,GAAG,KAAK;EAC3B,CAAC,EAAE,EAAE,CAAC;EACN,IAAIU,KAAK,GAAG,CAAC;EACb3E,QAAQ,CAAC,YAAM;IACb,IAAIgC,YAAY,CAACyC,OAAO,KAAKhE,MAAM,KAAKC,QAAQ,IAAIiE,KAAK,GAAGlE,MAAM,CAAC,EAAE;MACnE,IAAMmE,iBAAiB,GAAGhD,KAAK,CAACiD,UAAU;MAC1CjD,KAAK,CAACiD,UAAU,GAAG,IAAI;MACvBjD,KAAK,CAACkD,gBAAgB,GAAG5B,aAAa;MACtCpB,EAAE,CAACyC,eAAe,CAACjC,YAAY,CAAC;MAChCR,EAAE,CAAC0C,MAAM,CAAC5C,KAAK,EAAEI,YAAY,CAACyC,OAAO,CAAC;MACtC7C,KAAK,CAACkD,gBAAgB,GAAG,IAAI;MAC7Bf,WAAW,CAAC7C,IAAI,CAAC;MACjB,IAAIM,MAAM,EAAEuC,WAAW,CAAC7C,IAAI,GAAG,GAAG,CAAC;MACnCY,EAAE,CAACyC,eAAe,CAAC,IAAI,CAAC;MACxB3C,KAAK,CAACiD,UAAU,GAAGD,iBAAiB;MACpCD,KAAK,EAAE;IACT;EACF,CAAC,CAAC;EACF,OAAO,aAAa9E,KAAK,CAACkF,aAAa,CAAC,OAAO,EAAEnF,QAAQ,CAAC;IACxD,YAAY,EAAEkD,IAAI,CAACC,EAAE,GAAG;EAC1B,CAAC,EAAEtB,KAAK,EAAE;IACRnB,GAAG,EAAEA;EACP,CAAC,CAAC,EAAE,aAAaT,KAAK,CAACkF,aAAa,CAAC,MAAM,EAAE;IAC3CC,QAAQ,EAAErC,aAAa;IACvBpC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACjB0E,QAAQ,EAAE,CAAC,CAACnC,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;EAC/B,CAAC,EAAE,aAAalD,KAAK,CAACkF,aAAa,CAAC,mBAAmB,EAAE;IACvDG,GAAG,EAAE5C,YAAY,CAACG,OAAO;IACzB0C,WAAW,EAAE,IAAI;IACjBvE,OAAO,EAAEA;EACX,CAAC,CAAC,CAAC,EAAE,aAAaf,KAAK,CAACkF,aAAa,CAAC,oBAAoB,EAAE;IAC1DzE,GAAG,EAAE0B,YAAY;IACjBoD,IAAI,EAAE,CAAC,CAACtE,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,CAAC,EAAEE,MAAM,GAAG,CAAC,EAAE,CAACA,MAAM,GAAG,CAAC,EAAE,CAAC,EAAEI,GAAG;EAC/D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,SAASjB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}