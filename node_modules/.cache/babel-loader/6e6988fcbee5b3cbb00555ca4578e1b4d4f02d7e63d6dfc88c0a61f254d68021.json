{"ast":null,"code":"import _createClass from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _toConsumableArray from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"limit\", \"lineWidth\", \"children\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { useFrame, extend } from '@react-three/fiber';\nimport { Line2, LineMaterial, LineSegmentsGeometry } from 'three-stdlib';\nvar context = /*#__PURE__*/React.createContext(null);\nvar arrColor = function arrColor(color) {\n  return color instanceof THREE.Color ? color.toArray() : color;\n};\nvar arrPos = function arrPos(pos) {\n  return pos instanceof THREE.Vector3 ? pos.toArray() : pos;\n};\nvar Segments = /*#__PURE__*/React.forwardRef(function (props, forwardedRef) {\n  var _props$limit = props.limit,\n    limit = _props$limit === void 0 ? 1000 : _props$limit,\n    _props$lineWidth = props.lineWidth,\n    lineWidth = _props$lineWidth === void 0 ? 1.0 : _props$lineWidth,\n    children = props.children,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    segments = _React$useState2[0],\n    setSegments = _React$useState2[1];\n  var _React$useState3 = React.useState(function () {\n      return new Line2();\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    line = _React$useState4[0];\n  var _React$useState5 = React.useState(function () {\n      return new LineMaterial();\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 1),\n    material = _React$useState6[0];\n  var _React$useState7 = React.useState(function () {\n      return new LineSegmentsGeometry();\n    }),\n    _React$useState8 = _slicedToArray(_React$useState7, 1),\n    geometry = _React$useState8[0];\n  var _React$useState9 = React.useState(function () {\n      return new THREE.Vector2(512, 512);\n    }),\n    _React$useState10 = _slicedToArray(_React$useState9, 1),\n    resolution = _React$useState10[0];\n  var _React$useState11 = React.useState(function () {\n      return Array(limit * 6).fill(0);\n    }),\n    _React$useState12 = _slicedToArray(_React$useState11, 1),\n    positions = _React$useState12[0];\n  var _React$useState13 = React.useState(function () {\n      return Array(limit * 6).fill(0);\n    }),\n    _React$useState14 = _slicedToArray(_React$useState13, 1),\n    colors = _React$useState14[0];\n  var api = React.useMemo(function () {\n    return {\n      subscribe: function subscribe(ref) {\n        setSegments(function (segments) {\n          return [].concat(_toConsumableArray(segments), [ref]);\n        });\n        return function () {\n          return setSegments(function (segments) {\n            return segments.filter(function (item) {\n              return item.current !== ref.current;\n            });\n          });\n        };\n      }\n    };\n  }, []);\n  useFrame(function () {\n    for (var i = 0; i < limit; i++) {\n      var _segments$i;\n      var segment = (_segments$i = segments[i]) == null ? void 0 : _segments$i.current;\n      var segmentStart = segment ? arrPos(segment.start) : [0, 0, 0];\n      var segmentEnd = segment ? arrPos(segment.end) : [0, 0, 0];\n      var segmentColor = segment ? arrColor(segment.color) : [1, 1, 1]; //console.log(segmentStart, segmentEnd, segmentColor)\n\n      for (var j = 0; j < 3; j++) {\n        positions[i * 6 + j] = segmentStart[j];\n        positions[i * 6 + j + 3] = segmentEnd[j];\n        colors[i * 6 + j] = segmentColor[j];\n        colors[i * 6 + j + 3] = segmentColor[j];\n      }\n    }\n    geometry.setColors(colors);\n    geometry.setPositions(positions);\n    line.computeLineDistances();\n  });\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    object: line,\n    ref: forwardedRef\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: geometry,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    attach: \"material\",\n    vertexColors: true,\n    resolution: resolution,\n    linewidth: lineWidth\n  }, rest)), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\nvar SegmentObject = /*#__PURE__*/_createClass(function SegmentObject() {\n  _classCallCheck(this, SegmentObject);\n  this.color = new THREE.Color('white');\n  this.start = new THREE.Vector3(0, 0, 0);\n  this.end = new THREE.Vector3(0, 0, 0);\n});\nvar Segment = /*#__PURE__*/React.forwardRef(function (props, forwardedRef) {\n  var api = React.useContext(context);\n  if (!api) throw 'Segment must used inside Segments component.';\n  var ref = React.useRef();\n  React.useMemo(function () {\n    return extend({\n      SegmentObject: SegmentObject\n    });\n  }, []);\n  React.useLayoutEffect(function () {\n    return api.subscribe(ref);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"segmentObject\", _extends({\n    ref: mergeRefs([ref, forwardedRef])\n  }, props));\n});\nexport { Segment, Segments };","map":{"version":3,"names":["_extends","THREE","React","mergeRefs","useFrame","extend","Line2","LineMaterial","LineSegmentsGeometry","context","createContext","arrColor","color","Color","toArray","arrPos","pos","Vector3","Segments","forwardRef","props","forwardedRef","_props$limit","limit","_props$lineWidth","lineWidth","children","rest","_objectWithoutProperties","_excluded","_React$useState","useState","_React$useState2","_slicedToArray","segments","setSegments","_React$useState3","_React$useState4","line","_React$useState5","_React$useState6","material","_React$useState7","_React$useState8","geometry","_React$useState9","Vector2","_React$useState10","resolution","_React$useState11","Array","fill","_React$useState12","positions","_React$useState13","_React$useState14","colors","api","useMemo","subscribe","ref","concat","_toConsumableArray","filter","item","current","i","_segments$i","segment","segmentStart","start","segmentEnd","end","segmentColor","j","setColors","setPositions","computeLineDistances","createElement","object","attach","vertexColors","linewidth","Provider","value","SegmentObject","_createClass","_classCallCheck","Segment","useContext","useRef","useLayoutEffect"],"sources":["/Users/rizzytwizzy/Projects/idxntity/node_modules/@react-three/drei/core/Segments.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { useFrame, extend } from '@react-three/fiber';\nimport { Line2, LineMaterial, LineSegmentsGeometry } from 'three-stdlib';\n\nconst context = /*#__PURE__*/React.createContext(null);\n\nconst arrColor = color => color instanceof THREE.Color ? color.toArray() : color;\n\nconst arrPos = pos => pos instanceof THREE.Vector3 ? pos.toArray() : pos;\n\nconst Segments = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  const {\n    limit = 1000,\n    lineWidth = 1.0,\n    children,\n    ...rest\n  } = props;\n  const [segments, setSegments] = React.useState([]);\n  const [line] = React.useState(() => new Line2());\n  const [material] = React.useState(() => new LineMaterial());\n  const [geometry] = React.useState(() => new LineSegmentsGeometry());\n  const [resolution] = React.useState(() => new THREE.Vector2(512, 512));\n  const [positions] = React.useState(() => Array(limit * 6).fill(0));\n  const [colors] = React.useState(() => Array(limit * 6).fill(0));\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setSegments(segments => [...segments, ref]);\n      return () => setSegments(segments => segments.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  useFrame(() => {\n    for (let i = 0; i < limit; i++) {\n      var _segments$i;\n\n      const segment = (_segments$i = segments[i]) == null ? void 0 : _segments$i.current;\n      const segmentStart = segment ? arrPos(segment.start) : [0, 0, 0];\n      const segmentEnd = segment ? arrPos(segment.end) : [0, 0, 0];\n      const segmentColor = segment ? arrColor(segment.color) : [1, 1, 1]; //console.log(segmentStart, segmentEnd, segmentColor)\n\n      for (var j = 0; j < 3; j++) {\n        positions[i * 6 + j] = segmentStart[j];\n        positions[i * 6 + j + 3] = segmentEnd[j];\n        colors[i * 6 + j] = segmentColor[j];\n        colors[i * 6 + j + 3] = segmentColor[j];\n      }\n    }\n\n    geometry.setColors(colors);\n    geometry.setPositions(positions);\n    line.computeLineDistances();\n  });\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    object: line,\n    ref: forwardedRef\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: geometry,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    attach: \"material\",\n    vertexColors: true,\n    resolution: resolution,\n    linewidth: lineWidth\n  }, rest)), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\n\nclass SegmentObject {\n  constructor() {\n    this.color = new THREE.Color('white');\n    this.start = new THREE.Vector3(0, 0, 0);\n    this.end = new THREE.Vector3(0, 0, 0);\n  }\n\n}\n\nconst Segment = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  const api = React.useContext(context);\n  if (!api) throw 'Segment must used inside Segments component.';\n  const ref = React.useRef();\n  React.useMemo(() => extend({\n    SegmentObject\n  }), []);\n  React.useLayoutEffect(() => api.subscribe(ref), []);\n  return /*#__PURE__*/React.createElement(\"segmentObject\", _extends({\n    ref: mergeRefs([ref, forwardedRef])\n  }, props));\n});\n\nexport { Segment, Segments };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}