{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rizzytwizzy/Projects/idxntity/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as React from 'react';\nimport { useTexture } from './useTexture.js';\nimport { useAsset } from 'use-asset';\nfunction getFormatString(format) {\n  switch (format) {\n    case 64:\n      return '-64px';\n    case 128:\n      return '-128px';\n    case 256:\n      return '-256px';\n    case 512:\n      return '-512px';\n    default:\n      return '';\n  }\n}\nvar LIST_URL = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master/matcaps.json';\nvar MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d';\nfunction useMatcapTexture() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1024;\n  var matcapList = useAsset(function () {\n    return new Promise( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(resolve) {\n        var matcapList;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(LIST_URL).then(function (res) {\n                return res.json();\n              });\n            case 2:\n              matcapList = _context.sent;\n              resolve(matcapList);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }, 'matcapList');\n  var DEFAULT_MATCAP = matcapList[0];\n  var numTot = React.useMemo(function () {\n    return Object.keys(matcapList).length;\n  }, []);\n  var fileHash = React.useMemo(function () {\n    if (typeof id === 'string') {\n      return id;\n    } else if (typeof id === 'number') {\n      return matcapList[id];\n    }\n    return null;\n  }, [id]);\n  var fileName = \"\".concat(fileHash || DEFAULT_MATCAP).concat(getFormatString(format), \".png\");\n  var url = \"\".concat(MATCAP_ROOT, \"/\").concat(format, \"/\").concat(fileName);\n  var matcapTexture = useTexture(url);\n  return [matcapTexture, url, numTot];\n}\nexport { useMatcapTexture };","map":{"version":3,"names":["React","useTexture","useAsset","getFormatString","format","LIST_URL","MATCAP_ROOT","useMatcapTexture","id","arguments","length","undefined","matcapList","Promise","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resolve","wrap","_callee$","_context","prev","next","fetch","then","res","json","sent","stop","_x","apply","DEFAULT_MATCAP","numTot","useMemo","Object","keys","fileHash","fileName","concat","url","matcapTexture"],"sources":["/Users/rizzytwizzy/Projects/idxntity/node_modules/@react-three/drei/core/useMatcapTexture.js"],"sourcesContent":["import * as React from 'react';\nimport { useTexture } from './useTexture.js';\nimport { useAsset } from 'use-asset';\n\nfunction getFormatString(format) {\n  switch (format) {\n    case 64:\n      return '-64px';\n\n    case 128:\n      return '-128px';\n\n    case 256:\n      return '-256px';\n\n    case 512:\n      return '-512px';\n\n    default:\n      return '';\n  }\n}\n\nconst LIST_URL = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master/matcaps.json';\nconst MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d';\nfunction useMatcapTexture(id = 0, format = 1024) {\n  const matcapList = useAsset(() => new Promise(async resolve => {\n    const matcapList = await fetch(LIST_URL).then(res => res.json());\n    resolve(matcapList);\n  }), 'matcapList');\n  const DEFAULT_MATCAP = matcapList[0];\n  const numTot = React.useMemo(() => Object.keys(matcapList).length, []);\n  const fileHash = React.useMemo(() => {\n    if (typeof id === 'string') {\n      return id;\n    } else if (typeof id === 'number') {\n      return matcapList[id];\n    }\n\n    return null;\n  }, [id]);\n  const fileName = `${fileHash || DEFAULT_MATCAP}${getFormatString(format)}.png`;\n  const url = `${MATCAP_ROOT}/${format}/${fileName}`;\n  const matcapTexture = useTexture(url);\n  return [matcapTexture, url, numTot];\n}\n\nexport { useMatcapTexture };\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,QAAQ,QAAQ,WAAW;AAEpC,SAASC,eAAeA,CAACC,MAAM,EAAE;EAC/B,QAAQA,MAAM;IACZ,KAAK,EAAE;MACL,OAAO,OAAO;IAEhB,KAAK,GAAG;MACN,OAAO,QAAQ;IAEjB,KAAK,GAAG;MACN,OAAO,QAAQ;IAEjB,KAAK,GAAG;MACN,OAAO,QAAQ;IAEjB;MACE,OAAO,EAAE;EACb;AACF;AAEA,IAAMC,QAAQ,GAAG,oEAAoE;AACrF,IAAMC,WAAW,GAAG,wFAAwF;AAC5G,SAASC,gBAAgBA,CAAA,EAAwB;EAAA,IAAvBC,EAAE,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,IAAEL,MAAM,GAAAK,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAC7C,IAAMG,UAAU,GAAGV,QAAQ,CAAC;IAAA,OAAM,IAAIW,OAAO;MAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAC,QAAMC,OAAO;QAAA,IAAAP,UAAA;QAAA,OAAAI,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OAChCC,KAAK,CAACpB,QAAQ,CAAC,CAACqB,IAAI,CAAC,UAAAC,GAAG;gBAAA,OAAIA,GAAG,CAACC,IAAI,CAAC,CAAC;cAAA,EAAC;YAAA;cAA1DhB,UAAU,GAAAU,QAAA,CAAAO,IAAA;cAChBV,OAAO,CAACP,UAAU,CAAC;YAAC;YAAA;cAAA,OAAAU,QAAA,CAAAQ,IAAA;UAAA;QAAA,GAAAZ,OAAA;MAAA,CACrB;MAAA,iBAAAa,EAAA;QAAA,OAAAjB,IAAA,CAAAkB,KAAA,OAAAvB,SAAA;MAAA;IAAA,IAAC;EAAA,GAAE,YAAY,CAAC;EACjB,IAAMwB,cAAc,GAAGrB,UAAU,CAAC,CAAC,CAAC;EACpC,IAAMsB,MAAM,GAAGlC,KAAK,CAACmC,OAAO,CAAC;IAAA,OAAMC,MAAM,CAACC,IAAI,CAACzB,UAAU,CAAC,CAACF,MAAM;EAAA,GAAE,EAAE,CAAC;EACtE,IAAM4B,QAAQ,GAAGtC,KAAK,CAACmC,OAAO,CAAC,YAAM;IACnC,IAAI,OAAO3B,EAAE,KAAK,QAAQ,EAAE;MAC1B,OAAOA,EAAE;IACX,CAAC,MAAM,IAAI,OAAOA,EAAE,KAAK,QAAQ,EAAE;MACjC,OAAOI,UAAU,CAACJ,EAAE,CAAC;IACvB;IAEA,OAAO,IAAI;EACb,CAAC,EAAE,CAACA,EAAE,CAAC,CAAC;EACR,IAAM+B,QAAQ,MAAAC,MAAA,CAAMF,QAAQ,IAAIL,cAAc,EAAAO,MAAA,CAAGrC,eAAe,CAACC,MAAM,CAAC,SAAM;EAC9E,IAAMqC,GAAG,MAAAD,MAAA,CAAMlC,WAAW,OAAAkC,MAAA,CAAIpC,MAAM,OAAAoC,MAAA,CAAID,QAAQ,CAAE;EAClD,IAAMG,aAAa,GAAGzC,UAAU,CAACwC,GAAG,CAAC;EACrC,OAAO,CAACC,aAAa,EAAED,GAAG,EAAEP,MAAM,CAAC;AACrC;AAEA,SAAS3B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}